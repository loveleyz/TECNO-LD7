# TECNO-LD7
version: 2.1
jobs:
  build:
    docker:
      - image: fr3akyphantom/droid-builder:edge
    environment:
      # GitHubMail: "" # Git User Email Address
      # GitHubName: "" # Git Username
      # GITHUB_TOKEN: '' # MUST BE SECRET & PUT IN CIRCLECI PROJECT ENV VARS
      VENDOR: 'TECNO' # MANDATORY
      CODENAME: 'LD7' # MANDATORY
      FLAVOR: 'userdebug' # MANDATORY
    working_directory: /home/builder/android
    steps:
      - run:
          name: AIO Build
          command: |
            # SANITY CHECKS
            if [[ -z $GitHubMail ]]; then echo -e "You haven't configured GitHub E-Mail Address." && exit 1; fi
            if [[ -z $GitHubName ]]; then echo -e "You haven't configured GitHub Username." && exit 1; fi
            if [[ -z $GITHUB_TOKEN ]]; then echo -e "You haven't configured GitHub Token.\nWithout it, recovery can't be published." && exit 1; fi
            if [[ -z $VENDOR ]]; then echo -e "You haven't configured Vendor name." && exit 1; fi
            if [[ -z $CODENAME ]]; then echo -e "You haven't configured Device Codename." && exit 1; fi
            if [[ -z $FLAVOR ]]; then echo -e "Set as 'eng' or 'userdebug'." && exit 1; fi
            # Set GitAuth Infos"
            git config --global user.email $GitHubMail
            git config --global user.name $GitHubName
            git config --global credential.helper store
            git config --global color.ui true
            
            cd /home/builder/android
            
            echo -e "Initializing minimal manifest repo sync..."
            repo init -q -u https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni.git -b twrp-10.0 --depth 1
            
            echo -e "\nRemoving Unimportant Darwin-specific Files from syncing"
            cd .repo/manifests
            find . -type f -name '*.xml' | xargs sed -i '/darwin/d'
            git commit -a -m "Magic" || true
            cd ../ && sed -i '/darwin/d' manifest.xml && cd ../
            
            # Local manifests. Some builds fail if the file path does not exist.
            mkdir -p .repo/local_manifests && cat \<<EOF > .repo/local_manifests/x930.xml
            <?xml version="1.0" encoding="UTF-8"?>
            <manifest>
            <project path="device/TECNO/LD7" name="loveleyz/TECNO-LD7" revision="twrp-10.0" remote="github" />
            </manifest>
            EOF
            
            repo sync -c -q --force-sync --no-clone-bundle --no-tags -j$(nproc --all)
            
            # Unshallow vendor_omni
            repo forall vendor/omni -c "git fetch --unshallow omnirom android-10.0"
            # Retain "roomservice: Do not overwrite existing repositories"
            repo forall vendor/omni -c "git revert 718f4c2fd6890f5eaa2d4972b1c3f3f582b5da47 -Xtheirs --no-edit --no-commit"
            # Retain "roomservice: Do not overwrite existing devices"
            repo forall vendor/omni -c "git revert 380d19cea2857d5901d7e7163f65ccc66d7bbad7 -Xtheirs --no-edit --no-commit"
            # Add those retains into local commit
            repo forall vendor/omni -c "git commit -m 'Fix Build from forked/personal repos'"
            echo -e "\nPreparing Delicious Lunch..."
            export ALLOW_MISSING_DEPENDENCIES=true
            source build/envsetup.sh
            lunch omni_LD7-eng
            
            # Keep the whole .repo/manifests folder
            cp -a .repo/manifests $(pwd)/
            echo "Cleaning up the .repo folder to slim down the build system"
            rm -rf .repo
            mkdir -p .repo && mv manifests .repo/ && ln -s .repo/manifests/default.xml .repo/manifest.xml
            
            export nowTime=$(date +%Y%m%d-%H%M)
            echo -e "\nBuilding Started, Please wait patiently...\n"
            make -j$(nproc --all) recoveryimage
            echo "Ready to Deploy"
            mkdir upload
            export version=$(cat bootable/recovery/variables.h | grep "define TW_MAIN_VERSION_STR" | cut -d '"' -f2)
            cp out/target/product/${CODENAME}/recovery.img upload/TWRP-${version}-${CODENAME}-$nowTime-Unofficial.img
            cp out/target/product/${CODENAME}/*.img upload/
            cp out/target/product/${CODENAME}/ramdisk* upload/
            ls -lA upload/
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -n "Latest TWRP Release for $(echo $CODENAME)" -b "TWRP $(echo $version)" -delete twrp_v${version} upload/
workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
        filters:
            branches:
              only: 'twrp-10.0'
            context: personal-envs
          # if you are copy-pasting this script,
          # set $GitHubMail, $GitHubName and $GITHUB_TOKEN in the environment variables
